Library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

Entity reg_32 is
	PORT(	CLK:				IN STD_LOGIC;
			RST:				IN STD_LOGIC;
			WR_EN:			IN STD_LOGIC;
			ADD:				IN STD_LOGIC_VECTOR (1 DOWNTO 0);
			ADD_SET:			IN STD_LOGIC_VECTOR (1 DOWNTO 0);
			DATA_IN:			IN STD_LOGIC_VECTOR (31 DOWNTO 0);
			DATA_OUT:		OUT STD_LOGIC_VECTOR (31 DOWNTO 0));
end entity;

Architecture a_reg_32 of reg_32 is
	component reg_32 is
	PORT(	CLK:				IN STD_LOGIC;
			RST:				IN STD_LOGIC;
			WR_EN:			IN STD_LOGIC;
			ADD:				IN STD_LOGIC_VECTOR (1 DOWNTO 0);
			ADD_SET:			IN STD_LOGIC_VECTOR (1 DOWNTO 0);
			DATA_IN:			IN STD_LOGIC_VECTOR (31 DOWNTO 0);
			DATA_OUT:		OUT STD_LOGIC_VECTOR (31 DOWNTO 0));
	end component;

Begin
	Process (CLK, RST)
		Begin
		If CLK' event and CLK = '1' then
			If RST = '1' or WR_EN = '0' or ADD /= ADD_SET then
				DATA_OUT <= x"00000000";
			Else
				DATA_OUT <= DATA_IN;
			End If;
		End If;
	End process;
End architecture;
